// Code generated by protoc-gen-go. DO NOT EDIT.
// source: baseball.proto

/*
Package baseball is a generated protocol buffer package.

It is generated from these files:
	baseball.proto

It has these top-level messages:
	PlayerId
	PlayerVorp
*/
package baseball

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PlayerId struct {
	Id        int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	StartDate string `protobuf:"bytes,2,opt,name=startDate" json:"startDate,omitempty"`
	EndDate   string `protobuf:"bytes,3,opt,name=endDate" json:"endDate,omitempty"`
}

func (m *PlayerId) Reset()                    { *m = PlayerId{} }
func (m *PlayerId) String() string            { return proto.CompactTextString(m) }
func (*PlayerId) ProtoMessage()               {}
func (*PlayerId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PlayerId) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PlayerId) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *PlayerId) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

type PlayerVorp struct {
	Vorp float32 `protobuf:"fixed32,1,opt,name=vorp" json:"vorp,omitempty"`
}

func (m *PlayerVorp) Reset()                    { *m = PlayerVorp{} }
func (m *PlayerVorp) String() string            { return proto.CompactTextString(m) }
func (*PlayerVorp) ProtoMessage()               {}
func (*PlayerVorp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PlayerVorp) GetVorp() float32 {
	if m != nil {
		return m.Vorp
	}
	return 0
}

func init() {
	proto.RegisterType((*PlayerId)(nil), "baseball.PlayerId")
	proto.RegisterType((*PlayerVorp)(nil), "baseball.PlayerVorp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Vorp service

type VorpClient interface {
	GetVorp(ctx context.Context, in *PlayerId, opts ...grpc.CallOption) (*PlayerVorp, error)
}

type vorpClient struct {
	cc *grpc.ClientConn
}

func NewVorpClient(cc *grpc.ClientConn) VorpClient {
	return &vorpClient{cc}
}

func (c *vorpClient) GetVorp(ctx context.Context, in *PlayerId, opts ...grpc.CallOption) (*PlayerVorp, error) {
	out := new(PlayerVorp)
	err := grpc.Invoke(ctx, "/baseball.Vorp/GetVorp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Vorp service

type VorpServer interface {
	GetVorp(context.Context, *PlayerId) (*PlayerVorp, error)
}

func RegisterVorpServer(s *grpc.Server, srv VorpServer) {
	s.RegisterService(&_Vorp_serviceDesc, srv)
}

func _Vorp_GetVorp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VorpServer).GetVorp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/baseball.Vorp/GetVorp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VorpServer).GetVorp(ctx, req.(*PlayerId))
	}
	return interceptor(ctx, in, info, handler)
}

var _Vorp_serviceDesc = grpc.ServiceDesc{
	ServiceName: "baseball.Vorp",
	HandlerType: (*VorpServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVorp",
			Handler:    _Vorp_GetVorp_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "baseball.proto",
}

func init() { proto.RegisterFile("baseball.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 164 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0x4a, 0x2c, 0x4e,
	0x4d, 0x4a, 0xcc, 0xc9, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0x82,
	0xb8, 0x38, 0x02, 0x72, 0x12, 0x2b, 0x53, 0x8b, 0x3c, 0x53, 0x84, 0xf8, 0xb8, 0x98, 0x32, 0x53,
	0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0x98, 0x32, 0x53, 0x84, 0x64, 0xb8, 0x38, 0x8b, 0x4b,
	0x12, 0x8b, 0x4a, 0x5c, 0x12, 0x4b, 0x52, 0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0x10, 0x02,
	0x42, 0x12, 0x5c, 0xec, 0xa9, 0x79, 0x29, 0x60, 0x39, 0x66, 0xb0, 0x1c, 0x8c, 0xab, 0xa4, 0xc0,
	0xc5, 0x05, 0x31, 0x33, 0x2c, 0xbf, 0xa8, 0x40, 0x48, 0x88, 0x8b, 0xa5, 0x2c, 0xbf, 0xa8, 0x00,
	0x6c, 0x2e, 0x53, 0x10, 0x98, 0x6d, 0x64, 0xcb, 0xc5, 0x02, 0x96, 0x33, 0xe5, 0x62, 0x77, 0x4f,
	0x2d, 0x81, 0x28, 0xd3, 0x83, 0xbb, 0x11, 0xe6, 0x20, 0x29, 0x11, 0x74, 0x31, 0x90, 0x4a, 0x25,
	0x86, 0x24, 0x36, 0xb0, 0x2f, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x46, 0x14, 0x3f,
	0xd7, 0x00, 0x00, 0x00,
}
